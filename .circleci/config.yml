version: 2.1
orbs:
  docker: circleci/docker@2.1.1
  node: circleci/node@5.0.2
  sonarcloud: sonarsource/sonarcloud@2.0.0
jobs:
  generate_schema:
    executor:
      name: node/default
    working_directory: /home/circleci/flexo-mms-layer1-service
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM package Cache
          keys:
            - npm-packages-{{ checksum "deploy/package-lock.json" }}
      - node/install-packages:
          pkg-manager: npm
          app-dir: deploy
      - run:
          name: Generate schema
          command: |
            cd deploy
            npx ts-node src/main.ts http://layer1-service > ../src/test/resources/cluster.trig
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - flexo-mms-layer1-service/*
  build_and_test:
    machine:
      image: default
    working_directory: /home/circleci/flexo-mms-layer1-service
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Cat out cluster.trig
          command: |
            cat src/test/resources/cluster.trig
      - run:
          name: Build stack and run tests
          shell: /bin/bash
          command: |
            docker-compose -f src/test/resources/docker-compose.yml up -d
            docker build -t flexo-mms-test:latest -f Dockerfile-Test .
            docker run --network=flexo-mms-test-network --name flexo-mms-test-container flexo-mms-test:latest
            SIG_INT=$?
            docker cp flexo-mms-test-container:/application/build /home/circleci/flexo-mms-layer1-service/build
            exit "$SIG_INT"
      - store_artifacts:
          path: /home/circleci/flexo-mms-layer1-service/build/reports/tests
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - flexo-mms-layer1-service/*
  scan:
    executor:
      name: docker/docker
    working_directory: /home/circleci/flexo-mms-layer1-service
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/flexo-mms-layer1-service
      - sonarcloud/scan

  deploy_snapshot:
    executor:
      name: docker/docker
    working_directory: /home/circleci/flexo-mms-layer1-service
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/
      - run:
          name: Login to Dockerhub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Build docker image
          command: |
            cp src/main/resources/application.conf.example ./src/main/resources/application.conf
            docker build -t openmbee/flexo-mms-layer1-service:latest .
      - run:
          name: Tag docker image
          command: docker tag openmbee/flexo-mms-layer1-service:latest openmbee/flexo-mms-layer1-service:${CIRCLE_BRANCH#*/}-SNAPSHOT
      - run:
          name: Deploy snapshot to Dockerhub
          command: docker push openmbee/flexo-mms-layer1-service:${CIRCLE_BRANCH#*/}-SNAPSHOT
  deploy_nightly:
    executor:
      name: docker/docker
    working_directory: /home/circleci/flexo-mms-layer1-service
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/
      - checkout
      - run:
          name: Login to Dockerhub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Build docker image
          command: |
            cp src/main/resources/application.conf.example ./src/main/resources/application.conf
            docker build -t openmbee/flexo-mms-layer1-service:latest .
      - run:
          name: Tag docker image
          command: docker tag openmbee/flexo-mms-layer1-service:latest openmbee/flexo-mms-layer1-service:NIGHTLY-SNAPSHOT
      - run:
          name: Deploy snapshot to Dockerhub
          command: docker push openmbee/flexo-mms-layer1-service:NIGHTLY-SNAPSHOT
  deploy_release:
    executor:
      name: docker/docker
    working_directory: /home/circleci/flexo-mms-layer1-service
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/
      - run:
          name: Login to Dockerhub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Build docker image
          command: |
            cp src/main/resources/application.conf.example ./src/main/resources/application.conf
            docker build -t openmbee/flexo-mms-layer1-service:latest .
      - run:
          name: Tag docker image
          command: docker tag openmbee/flexo-mms-layer1-service:latest openmbee/flexo-mms-layer1-service:${CIRCLE_TAG}
      - run:
          name: Deploy release to dockerhub
          command: docker push openmbee/flexo-mms-layer1-service:${CIRCLE_TAG}
      - run:
          name: Deploy release as latest to dockerhub
          command: docker push openmbee/flexo-mms-layer1-service:latest

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - scan:
          requires:
            - build_and_test
          context:
            - SonarCloud
      - generate_schema:
          filters:
            tags:
              only: /v[0-9.]+(-[\w-]+(\.[0-9]+)?)?/
          context:
            - DockerHub
      - build_and_test:
          post-steps:
            - persist_to_workspace:
                root: /home/circleci/flexo-mms-layer1-service
                paths:
                  - build/*
          requires:
            - generate_schema
          filters:
            tags:
              only: /v[0-9.]+(-[\w-]+(\.[0-9]+)?)?/
          context:
            - DockerHub
      - deploy_snapshot:
          requires:
            - build_and_test
          filters:
            branches:
              only: /((release|hotfix|support)/[0-9.]+(-[\w-]+(\.[0-9]+)?)?|develop)/
          context:
            - DockerHub
      - deploy_release:
          requires:
            - build_and_test
          filters:
            tags:
              only: /v[0-9.]+(-[\w-]+(\.[0-9]+)?)?/
            branches:
              ignore: /.*/
          context:
            - DockerHub
